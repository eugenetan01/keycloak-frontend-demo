services:
  another-database-if-you-need: # Example. Remove before using.
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - local_network
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    command:
      [
        "start-dev",
        "--http-port",
        "7080",
        "--https-port",
        "7443",
        "--import-realm",
      ]

    ports:
      - "7080:7080"
      - "7443:7443"
    networks:
      - local_network

  kong:
    image: kong/kong-gateway:3.9.0.0
    environment:
      KONG_ROLE: data_plane
      KONG_DATABASE: "off"
      KONG_VITALS: "off"
      KONG_CLUSTER_MTLS: pki
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: system
      KONG_KONNECT_MODE: "on"
      KONG_CLUSTER_DP_LABELS: created-by:quickstart,type:docker-macOsArmOS
      KONG_CLUSTER_CERT: /etc/kong/tls.crt
      KONG_CLUSTER_CERT_KEY: /etc/kong/tls.key
      KONG_CLUSTER_CONTROL_PLANE: <changeme>
      KONG_CLUSTER_SERVER_NAME: <changeme>
      KONG_CLUSTER_TELEMETRY_ENDPOINT: <changeme>
      KONG_CLUSTER_TELEMETRY_SERVER_NAME: <changeme>
    ports:
      - "8000:8000"
      - "8443:8443"
    volumes:
      - ./tls.crt:/etc/kong/tls.crt:ro
      - ./tls.key:/etc/kong/tls.key:ro
    networks:
      - local_network
networks:
  local_network:
    driver: bridge
